{"ast":null,"code":"var _jsxFileName = \"/Users/hyeonji/Desktop/Project/DMF/admin_web/src/page/AddSentence.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport InputForm from \"../component/InputForm\";\nimport ActionButton from \"../component/ActionButton\";\nimport Header from \"../component/Header\";\nimport { useNavigate } from \"react-router-dom\";\nimport * as ToolManager from \"../tools/ToolManager\";\nimport { PathType } from \"../tools/DefineManager\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddSentence() {\n  _s();\n  const [content, setSentenceContent] = useState(\"\");\n  const [writer, setSentenceWriter] = useState(\"\");\n  const movePage = useNavigate();\n  function backAction() {\n    movePage(\"/main\");\n  }\n  function addAction() {\n    // const url = \"http://10.20.10.111:6501/stn/addSentence.dmfap\";\n    // axios.post(url, {\n    //     \"content\" : content,\n    //     \"writer\": writer\n    // }, {\n    //     headers: {\n    //         \"Content-Type\": \"application/json\",\n    //         \"osType\": \"W\",\n    //         \"contentInfo\": \"AdminWebCall\"\n    //     }\n    // }).then((response) => {\n    //     if(response.data.code === \"0000\") {\n    //         alert(\"등록 완료되었습니다.\")\n    //         movePage(\"/main\")\n    //     } else {\n    //         alert(response.data.msg)\n    //     }\n    // })\n    //     .catch((response) => {console.log('Error!') });\n\n    ToolManager.postCall(PathType[\"ADD_SENTENCE\"], {\n      \"content\": content,\n      \"writer\": writer\n    }, addOkAction);\n  }\n  function addOkAction() {\n    alert(\"등록 완료되었습니다.\");\n    movePage(\"/main\");\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"\\uBB38\\uC7A5 \\uCD94\\uAC00\\uD558\\uAE30\",\n      subTitle: \"\\uC2E0\\uADDC \\uBB38\\uC7A5 \\uCD94\\uAC00\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(InputForm, {\n        title: \"\\uBB38\\uC7A5 \\uC785\\uB825\",\n        inputTxt: setSentenceContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputForm, {\n        title: \"\\uBB38\\uC7A5 \\uC791\\uC131\\uC790 \\uC785\\uB825\",\n        inputTxt: setSentenceWriter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ActionButton, {\n      btnTitle: \"\\uB4A4\\uB85C\\uAC00\\uAE30\",\n      action: backAction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ActionButton, {\n      btnTitle: \"\\uCD94\\uAC00\\uD558\\uAE30\",\n      action: addAction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n_s(AddSentence, \"1dQbqmzwpoYiGUSw/hksfyeSl0E=\", false, function () {\n  return [useNavigate];\n});\n_c = AddSentence;\nexport default AddSentence;\nvar _c;\n$RefreshReg$(_c, \"AddSentence\");","map":{"version":3,"names":["React","useState","InputForm","ActionButton","Header","useNavigate","ToolManager","PathType","jsxDEV","_jsxDEV","AddSentence","_s","content","setSentenceContent","writer","setSentenceWriter","movePage","backAction","addAction","postCall","addOkAction","alert","children","title","subTitle","fileName","_jsxFileName","lineNumber","columnNumber","inputTxt","btnTitle","action","_c","$RefreshReg$"],"sources":["/Users/hyeonji/Desktop/Project/DMF/admin_web/src/page/AddSentence.tsx"],"sourcesContent":["import React, {useState} from \"react\";\nimport InputForm from \"../component/InputForm\";\nimport ActionButton from \"../component/ActionButton\";\nimport Header from \"../component/Header\";\nimport axios from \"axios\";\nimport {useNavigate} from \"react-router-dom\";\nimport * as ToolManager from \"../tools/ToolManager\";\nimport {PathType} from \"../tools/DefineManager\";\n\nfunction AddSentence() {\n    const [content, setSentenceContent] = useState(\"\")\n    const [writer, setSentenceWriter] = useState(\"\")\n    const movePage = useNavigate()\n\n    function backAction() {\n        movePage(\"/main\")\n    }\n\n    function addAction() {\n        // const url = \"http://10.20.10.111:6501/stn/addSentence.dmfap\";\n        // axios.post(url, {\n        //     \"content\" : content,\n        //     \"writer\": writer\n        // }, {\n        //     headers: {\n        //         \"Content-Type\": \"application/json\",\n        //         \"osType\": \"W\",\n        //         \"contentInfo\": \"AdminWebCall\"\n        //     }\n        // }).then((response) => {\n        //     if(response.data.code === \"0000\") {\n        //         alert(\"등록 완료되었습니다.\")\n        //         movePage(\"/main\")\n        //     } else {\n        //         alert(response.data.msg)\n        //     }\n        // })\n        //     .catch((response) => {console.log('Error!') });\n\n        ToolManager.postCall(PathType[\"ADD_SENTENCE\"], {\n            \"content\": content,\n            \"writer\": writer\n        }, addOkAction)\n    }\n\n    function addOkAction() {\n        alert(\"등록 완료되었습니다.\")\n        movePage(\"/main\")\n    }\n\n    return (\n        <div>\n            <Header title=\"문장 추가하기\" subTitle=\"신규 문장 추가하기\"/>\n            <ul>\n                <InputForm title=\"문장 입력\" inputTxt={setSentenceContent}/>\n                <InputForm title=\"문장 작성자 입력\" inputTxt={setSentenceWriter}/>\n            </ul>\n\n            <ActionButton btnTitle=\"뒤로가기\" action={backAction}/>\n            <ActionButton btnTitle=\"추가하기\" action={addAction}/>\n        </div>\n    )\n}\n\nexport default AddSentence;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,MAAM,MAAM,qBAAqB;AAExC,SAAQC,WAAW,QAAO,kBAAkB;AAC5C,OAAO,KAAKC,WAAW,MAAM,sBAAsB;AACnD,SAAQC,QAAQ,QAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,OAAO,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACa,MAAM,EAAEC,iBAAiB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAMe,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9B,SAASY,UAAUA,CAAA,EAAG;IAClBD,QAAQ,CAAC,OAAO,CAAC;EACrB;EAEA,SAASE,SAASA,CAAA,EAAG;IACjB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEAZ,WAAW,CAACa,QAAQ,CAACZ,QAAQ,CAAC,cAAc,CAAC,EAAE;MAC3C,SAAS,EAAEK,OAAO;MAClB,QAAQ,EAAEE;IACd,CAAC,EAAEM,WAAW,CAAC;EACnB;EAEA,SAASA,WAAWA,CAAA,EAAG;IACnBC,KAAK,CAAC,aAAa,CAAC;IACpBL,QAAQ,CAAC,OAAO,CAAC;EACrB;EAEA,oBACIP,OAAA;IAAAa,QAAA,gBACIb,OAAA,CAACL,MAAM;MAACmB,KAAK,EAAC,uCAAS;MAACC,QAAQ,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAC/CnB,OAAA;MAAAa,QAAA,gBACIb,OAAA,CAACP,SAAS;QAACqB,KAAK,EAAC,2BAAO;QAACM,QAAQ,EAAEhB;MAAmB;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACxDnB,OAAA,CAACP,SAAS;QAACqB,KAAK,EAAC,8CAAW;QAACM,QAAQ,EAAEd;MAAkB;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3D,CAAC,eAELnB,OAAA,CAACN,YAAY;MAAC2B,QAAQ,EAAC,0BAAM;MAACC,MAAM,EAAEd;IAAW;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACnDnB,OAAA,CAACN,YAAY;MAAC2B,QAAQ,EAAC,0BAAM;MAACC,MAAM,EAAEb;IAAU;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjD,CAAC;AAEd;AAACjB,EAAA,CArDQD,WAAW;EAAA,QAGCL,WAAW;AAAA;AAAA2B,EAAA,GAHvBtB,WAAW;AAuDpB,eAAeA,WAAW;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}