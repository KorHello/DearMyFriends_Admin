{"ast":null,"code":"var _jsxFileName = \"/Users/hyeonji/Desktop/Project/DMF/admin_web/src/component/AuthForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport '../css/AuthForm.css';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AuthForm() {\n  _s();\n  const [idValue, setId] = useState(\"\");\n  const [authNum, setAuthNum] = useState(\"\");\n  var isAuthNumSend = false;\n  const inputAdminId = event => {\n    setId(event.target.value);\n  };\n  const inputAuthNum = event => {\n    setAuthNum(event.target.value);\n  };\n  function authAction() {\n    if (!isAuthNumSend) {\n      // 인증번호 발송전\n      if (idValue === \"\") {\n        alert(\"아이디가 입력되지 않았습니다. 확인 후 다시 시도해주세요.\");\n      } else {\n        alert(\"inputID :: \" + idValue);\n        var url = \"http://10.20.10.111:6501/mem/sendAuthNum.dmfap\";\n        axios.post(url, {\n          \"userId\": idValue\n        }, {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"osType\": \"W\",\n            \"contentInfo\": \"AdminWebCall\"\n          }\n        }).then(response => {\n          alert(\"log :: \" + response.data.resultCode);\n        }).catch(response => {\n          console.log('Error!');\n        });\n      }\n    } else {\n      // 발송 후\n      isAuthNumSend = false;\n      alert(\"CheckAuthNum :: \" + authNum);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"formBoxDiv\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"formBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: idValue,\n          onChange: inputAdminId,\n          type: \"text\",\n          placeholder: \"\\uC544\\uC774\\uB514 \\uC785\\uB825\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: authNum,\n          onChange: inputAuthNum,\n          type: \"password\",\n          placeholder: \"\\uC778\\uC99D\\uBC88\\uD638 \\uC785\\uB825\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: authAction,\n          children: \"\\uC778\\uC99D\\uBC88\\uD638 \\uBCF4\\uB0B4\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n_s(AuthForm, \"qsj10k00ZgmpdsRxnWLgEO4Dik0=\");\n_c = AuthForm;\nexport default AuthForm;\nvar _c;\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","AuthForm","_s","idValue","setId","authNum","setAuthNum","isAuthNumSend","inputAdminId","event","target","value","inputAuthNum","authAction","alert","url","post","headers","then","response","data","resultCode","catch","console","log","className","children","onChange","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/hyeonji/Desktop/Project/DMF/admin_web/src/component/AuthForm.tsx"],"sourcesContent":["import React, {useState} from \"react\";\nimport '../css/AuthForm.css'\nimport axios from \"axios\";\n\nfunction AuthForm() {\n    const [idValue, setId] = useState(\"\")\n    const [authNum, setAuthNum] = useState(\"\")\n\n    var isAuthNumSend = false\n\n    const inputAdminId = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setId(event.target.value)\n    }\n\n    const inputAuthNum = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setAuthNum(event.target.value)\n    }\n\n    function authAction() {\n        if(!isAuthNumSend) {\n            // 인증번호 발송전\n            if(idValue === \"\") {\n                alert(\"아이디가 입력되지 않았습니다. 확인 후 다시 시도해주세요.\")\n            } else {\n                alert(\"inputID :: \" + idValue)\n\n                var url = \"http://10.20.10.111:6501/mem/sendAuthNum.dmfap\"\n                axios.post(url, {\n                    \"userId\" : idValue\n                }, {\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        \"osType\": \"W\",\n                        \"contentInfo\": \"AdminWebCall\"\n                    }\n                }).then((response) => {\n                    alert(\"log :: \" + response.data.resultCode)\n                })\n                    .catch((response) => {console.log('Error!') });\n            }\n        } else {\n            // 발송 후\n            isAuthNumSend = false\n            alert(\"CheckAuthNum :: \" + authNum)\n        }\n\n    }\n\n    return (\n        <div className=\"formBoxDiv\">\n            <ul className=\"formBox\">\n                <li><input value={idValue} onChange={inputAdminId} type=\"text\" placeholder=\"아이디 입력\"/> </li>\n                <li><input value={authNum} onChange={inputAuthNum} type=\"password\" placeholder=\"인증번호 입력\"/> </li>\n                <li>\n                    <button onClick={authAction}>인증번호 보내기</button>\n                </li>\n            </ul>\n        </div>\n    )\n}\n\nexport default AuthForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}