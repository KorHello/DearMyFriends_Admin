{"ast":null,"code":"var _jsxFileName = \"/Users/hyeonji/Desktop/Project/DMF/admin_web/src/component/AuthForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport '../css/AuthForm.css';\n// import axios from \"axios\";\nimport * as ToolManager from '../tools/ToolManager';\nimport { PathType } from \"../tools/DefineManager\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AuthForm() {\n  _s();\n  const [idValue, setId] = useState(\"\");\n  const [authNum, setAuthNum] = useState(\"\");\n  const [checkInput, setInputState] = useState(false);\n  const movePage = useNavigate();\n  const inputAdminId = event => {\n    setId(event.target.value);\n  };\n  const inputAuthNum = event => {\n    setAuthNum(event.target.value);\n  };\n  function authAction() {\n    if (!checkInput) {\n      // 인증번호 발송전\n      if (idValue === \"\") {\n        alert(\"아이디가 입력되지 않았습니다. 확인 후 다시 시도해주세요.\");\n      } else {\n        // const url = \"http://10.20.10.111:6501/mem/sendAuthNum.dmfap\";\n        // axios.post(url, {\n        //     \"userId\" : idValue\n        // }, {\n        //     headers: {\n        //         \"Content-Type\": \"application/json\",\n        //         \"osType\": \"W\",\n        //         \"contentInfo\": \"AdminWebCall\"\n        //     }\n        // }).then((response) => {\n        //     if(response.data.code === \"0000\") {\n        //         setInputState(true)\n        //         alert(\"인증번호 발송이 완료되었습니다.\")\n        //     } else {\n        //         alert(\"log :: \" + response.data.msg)\n        //     }\n        // })\n        //     .catch((response) => {console.log('Error!') });\n        ToolManager.postCall(PathType[\"SEND_AUTHNUM\"], {\n          \"userId\": idValue\n        }, sendAuthNumOk(), null);\n      }\n    } else {\n      // 발송 후\n      if (authNum === \"\" || authNum.length < 6) {\n        alert(\"인증번호 입력 후 다시 시도해주세요.\");\n      } else {\n        const url = \"http://10.20.10.111:6501/mem/checkAuthNum.dmfap\";\n        axios.post(url, {\n          \"userId\": idValue,\n          \"authNum\": authNum\n        }, {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"osType\": \"W\",\n            \"contentInfo\": \"AdminWebCall\"\n          }\n        }).then(response => {\n          if (response.data.code === \"0000\") {\n            alert(\"인증이 완료되었습니다.\");\n            movePage('/main');\n          } else {\n            alert(\"log :: \" + response.data.msg);\n          }\n        }).catch(response => {\n          console.log('Error!');\n        });\n      }\n    }\n  }\n  function sendAuthNumOk() {\n    setInputState(true);\n    alert(\"인증번호 발송이 완료되었습니다.\");\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"formBoxDiv\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"formBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: idValue,\n          onChange: inputAdminId,\n          disabled: checkInput,\n          type: \"text\",\n          placeholder: \"\\uC544\\uC774\\uB514 \\uC785\\uB825\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: authNum,\n          onChange: inputAuthNum,\n          type: \"password\",\n          placeholder: \"\\uC778\\uC99D\\uBC88\\uD638 \\uC785\\uB825\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: authAction,\n          children: \"\\uC778\\uC99D\\uBC88\\uD638 \\uBCF4\\uB0B4\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n}\n_s(AuthForm, \"+9FpynKOH+yrXoh7EtZawavROXY=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthForm;\nexport default AuthForm;\nvar _c;\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"names":["React","useState","ToolManager","PathType","useNavigate","jsxDEV","_jsxDEV","AuthForm","_s","idValue","setId","authNum","setAuthNum","checkInput","setInputState","movePage","inputAdminId","event","target","value","inputAuthNum","authAction","alert","postCall","sendAuthNumOk","length","url","axios","post","headers","then","response","data","code","msg","catch","console","log","className","children","onChange","disabled","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/hyeonji/Desktop/Project/DMF/admin_web/src/component/AuthForm.tsx"],"sourcesContent":["import React, {useState} from \"react\";\nimport '../css/AuthForm.css'\n// import axios from \"axios\";\nimport * as ToolManager from '../tools/ToolManager';\nimport {PathType} from \"../tools/DefineManager\";\nimport {useNavigate} from \"react-router-dom\";\n\nfunction AuthForm() {\n    const [idValue, setId] = useState(\"\")\n    const [authNum, setAuthNum] = useState(\"\")\n    const [checkInput, setInputState] = useState(false)\n    const movePage = useNavigate()\n\n    const inputAdminId = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setId(event.target.value)\n    }\n\n    const inputAuthNum = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setAuthNum(event.target.value)\n    }\n\n    function authAction() {\n        if(!checkInput) {\n            // 인증번호 발송전\n            if(idValue === \"\") {\n                alert(\"아이디가 입력되지 않았습니다. 확인 후 다시 시도해주세요.\")\n            } else {\n                // const url = \"http://10.20.10.111:6501/mem/sendAuthNum.dmfap\";\n                // axios.post(url, {\n                //     \"userId\" : idValue\n                // }, {\n                //     headers: {\n                //         \"Content-Type\": \"application/json\",\n                //         \"osType\": \"W\",\n                //         \"contentInfo\": \"AdminWebCall\"\n                //     }\n                // }).then((response) => {\n                //     if(response.data.code === \"0000\") {\n                //         setInputState(true)\n                //         alert(\"인증번호 발송이 완료되었습니다.\")\n                //     } else {\n                //         alert(\"log :: \" + response.data.msg)\n                //     }\n                // })\n                //     .catch((response) => {console.log('Error!') });\n                ToolManager.postCall(PathType[\"SEND_AUTHNUM\"], {\"userId\": idValue}, sendAuthNumOk(), null)\n            }\n        } else {\n            // 발송 후\n            if(authNum === \"\" || authNum.length < 6) {\n                alert(\"인증번호 입력 후 다시 시도해주세요.\")\n            } else {\n                const url = \"http://10.20.10.111:6501/mem/checkAuthNum.dmfap\";\n                axios.post(url, {\n                    \"userId\" : idValue,\n                    \"authNum\": authNum\n                }, {\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        \"osType\": \"W\",\n                        \"contentInfo\": \"AdminWebCall\"\n                    }\n                }).then((response) => {\n                    if(response.data.code === \"0000\") {\n                        alert(\"인증이 완료되었습니다.\")\n                        movePage('/main')\n                    } else {\n                        alert(\"log :: \" + response.data.msg)\n                    }\n                })\n                    .catch((response) => {console.log('Error!') });\n            }\n        }\n    }\n\n    function sendAuthNumOk() {\n        setInputState(true)\n        alert(\"인증번호 발송이 완료되었습니다.\")\n    }\n\n    return (\n        <div className=\"formBoxDiv\">\n            <ul className=\"formBox\">\n                <li><input value={idValue} onChange={inputAdminId} disabled={checkInput} type=\"text\" placeholder=\"아이디 입력\"/> </li>\n                <li><input value={authNum} onChange={inputAuthNum} type=\"password\" placeholder=\"인증번호 입력\"/> </li>\n                <li>\n                    <button onClick={authAction}>인증번호 보내기</button>\n                </li>\n            </ul>\n        </div>\n    )\n}\n\nexport default AuthForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}